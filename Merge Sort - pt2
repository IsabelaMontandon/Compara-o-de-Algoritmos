#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void intercala(int inicio, int meio, int fim, int vetor[]) {
    int contadorEsquerda, contadorDireita, contador, *vetorTemp;

    vetorTemp = (int*)malloc(sizeof(int) * (fim - inicio));

    contadorEsquerda = inicio;
    contadorDireita = meio;
    contador = 0;

    while (contadorEsquerda < meio && contadorDireita < fim) {
        if (vetor[contadorEsquerda] < vetor[contadorDireita]) {
            vetorTemp[contador++] = vetor[contadorEsquerda++];
        } else {
            vetorTemp[contador++] = vetor[contadorDireita++];
        }
    }

    while (contadorEsquerda < meio) {
        vetorTemp[contador++] = vetor[contadorEsquerda++];
    }

    while (contadorDireita < fim) {
        vetorTemp[contador++] = vetor[contadorDireita++];
    }

    for (contadorEsquerda = inicio; contadorEsquerda < fim; contadorEsquerda++) {
        vetor[contadorEsquerda] = vetorTemp[contadorEsquerda - inicio];
    }

    free(vetorTemp);
}

void mergeSort(int inicio, int fim, int vetor[]) {
    if (inicio < fim - 1) {
        int meio = (inicio + fim) / 2;

        mergeSort(inicio, meio, vetor);
        mergeSort(meio, fim, vetor);
        intercala(inicio, meio, fim, vetor);
    }
}

int main() {
    const int tamanhoBase = 20000;
    int i, j, k, numExecucoes = 3, fatorEscala = 20;
    int vetor[tamanhoBase * fatorEscala];
    clock_t tempoInicial, tempoFinal;
    double tempoTotal = 0, tempoMedio = 0;

    srand(time(NULL));

    for (i = 1; i <= fatorEscala; i++) {
        printf("Tamanho do vetor: %d\n\n", (tamanhoBase * i));
        tempoMedio = 0;

        for (j = 0; j < numExecucoes; j++) {
            for (k = 0; k < (tamanhoBase * i); k++) {
                vetor[k] = rand() % 101;
            }

            tempoInicial = clock();

            mergeSort(0, (tamanhoBase * i), vetor);

            tempoFinal = clock();

            tempoTotal = (double)(tempoFinal - tempoInicial) / CLOCKS_PER_SEC;
            tempoMedio += tempoTotal;

            printf("Tempo execução %d: %f\n", j + 1, tempoTotal);
        }

        tempoMedio /= numExecucoes;

        printf("\nTempo médio: %f\n\n", tempoMedio);
    }
}
